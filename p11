#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define MAX_EMP 100
#define MAX_TAB 50
struct EMPLOYEE
{
    int key;
    char name[50];
};
typedef struct EMPLOYEE*emp;
emp hashtable[MAX_TAB];

int cmphash(int,int);
void addemp(emp,int);
emp searchemp(int,int);

int main()
{
    int m,i,n=0;
    int srchkey,empkey;
    char empname[50];
    emp temp,found;

    FILE*file=fopen("employee.txt","r");
    printf("enter the size of the hash table(m):");
    scanf("%d",&m);
    for(i=0;i<m;i++)
    {
        hashtable[i]=NULL;
    }

    if(file==NULL)
    {
        printf("error opening file\n");
        return 1;
    }
    while(fscanf(file,"%d %s",&empkey,empname)!=EOF)
    {
        temp=(emp)malloc(sizeof(struct EMPLOYEE));
        temp->key=empkey;
        strcpy(temp->name,empname);
        addemp(temp,m);
        n++;
    }
    fclose(file);
    printf("Enter a key to search for an employee record:");
    scanf("%d",&srchkey);
    found=searchemp(srchkey,m);
    if(found!=NULL)
    {
        printf("employee found with key %d:\n",found->key);
        printf("name:%sn",found->name);
    }
    else
    {
        printf("employee with key %d not found\n",srchkey);
    }
}
void addemp(emp e,int m)
{
    int index=cmphash(e->key,m);
    while(hashtable[index]!=NULL)
    {
        index=(index+1)%m;
    }
    hashtable[index]=e;
}
int cmphash(int key,int m)
{
    return key % m;
}
emp searchemp(int key,int m)
{
    int index=cmphash(key,m);

    while(hashtable[index]!=NULL)
    {
        if(hashtable[index]->key==key)
        {
            return hashtable[index];
        }
        index=(index+1) % m;
    }
    return NULL;
